//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace EmployeeMgmtSilverlightApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/EmployeeEntity")]
    public partial class Entity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BirthdateField;
        
        private int EmployeeidField;
        
        private string FirstnameField;
        
        private string LastnameField;
        
        private string SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthdateField, value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Employeeid {
            get {
                return this.EmployeeidField;
            }
            set {
                if ((this.EmployeeidField.Equals(value) != true)) {
                    this.EmployeeidField = value;
                    this.RaisePropertyChanged("Employeeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ServiceReference1.EmployeeService")]
    public interface EmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:EmployeeService/DoWork", ReplyAction="urn:EmployeeService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent, System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:EmployeeService/Employee", ReplyAction="urn:EmployeeService/EmployeeResponse")]
        System.IAsyncResult BeginEmployee(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent, System.AsyncCallback callback, object asyncState);
        
        int EndEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:EmployeeService/SelectAll", ReplyAction="urn:EmployeeService/SelectAllResponse")]
        System.IAsyncResult BeginSelectAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<EmployeeMgmtSilverlightApplication.ServiceReference1.Entity> EndSelectAll(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EmployeeServiceChannel : EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<EmployeeMgmtSilverlightApplication.ServiceReference1.Entity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<EmployeeMgmtSilverlightApplication.ServiceReference1.Entity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService>, EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmployeeDelegate;
        
        private EndOperationDelegate onEndEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectAllDelegate;
        
        private EndOperationDelegate onEndSelectAllDelegate;
        
        private System.Threading.SendOrPostCallback onSelectAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<EmployeeCompletedEventArgs> EmployeeCompleted;
        
        public event System.EventHandler<SelectAllCompletedEventArgs> SelectAllCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService.BeginDoWork(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(ent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent = ((EmployeeMgmtSilverlightApplication.ServiceReference1.Entity)(inValues[0]));
            return ((EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService)(this)).BeginDoWork(ent, callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent) {
            this.DoWorkAsync(ent, null);
        }
        
        public void DoWorkAsync(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent, object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, new object[] {
                        ent}, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService.BeginEmployee(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmployee(ent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService.EndEmployee(System.IAsyncResult result) {
            return base.Channel.EndEmployee(result);
        }
        
        private System.IAsyncResult OnBeginEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent = ((EmployeeMgmtSilverlightApplication.ServiceReference1.Entity)(inValues[0]));
            return ((EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService)(this)).BeginEmployee(ent, callback, asyncState);
        }
        
        private object[] OnEndEmployee(System.IAsyncResult result) {
            int retVal = ((EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService)(this)).EndEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmployeeCompleted(object state) {
            if ((this.EmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmployeeCompleted(this, new EmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmployeeAsync(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent) {
            this.EmployeeAsync(ent, null);
        }
        
        public void EmployeeAsync(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent, object userState) {
            if ((this.onBeginEmployeeDelegate == null)) {
                this.onBeginEmployeeDelegate = new BeginOperationDelegate(this.OnBeginEmployee);
            }
            if ((this.onEndEmployeeDelegate == null)) {
                this.onEndEmployeeDelegate = new EndOperationDelegate(this.OnEndEmployee);
            }
            if ((this.onEmployeeCompletedDelegate == null)) {
                this.onEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginEmployeeDelegate, new object[] {
                        ent}, this.onEndEmployeeDelegate, this.onEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService.BeginSelectAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<EmployeeMgmtSilverlightApplication.ServiceReference1.Entity> EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService.EndSelectAll(System.IAsyncResult result) {
            return base.Channel.EndSelectAll(result);
        }
        
        private System.IAsyncResult OnBeginSelectAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService)(this)).BeginSelectAll(callback, asyncState);
        }
        
        private object[] OnEndSelectAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<EmployeeMgmtSilverlightApplication.ServiceReference1.Entity> retVal = ((EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService)(this)).EndSelectAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectAllCompleted(object state) {
            if ((this.SelectAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectAllCompleted(this, new SelectAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectAllAsync() {
            this.SelectAllAsync(null);
        }
        
        public void SelectAllAsync(object userState) {
            if ((this.onBeginSelectAllDelegate == null)) {
                this.onBeginSelectAllDelegate = new BeginOperationDelegate(this.OnBeginSelectAll);
            }
            if ((this.onEndSelectAllDelegate == null)) {
                this.onEndSelectAllDelegate = new EndOperationDelegate(this.OnEndSelectAll);
            }
            if ((this.onSelectAllCompletedDelegate == null)) {
                this.onSelectAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectAllCompleted);
            }
            base.InvokeAsync(this.onBeginSelectAllDelegate, null, this.onEndSelectAllDelegate, this.onSelectAllCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService CreateChannel() {
            return new EmployeeServiceClientChannel(this);
        }
        
        private class EmployeeServiceClientChannel : ChannelBase<EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService>, EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService {
            
            public EmployeeServiceClientChannel(System.ServiceModel.ClientBase<EmployeeMgmtSilverlightApplication.ServiceReference1.EmployeeService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ent;
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginEmployee(EmployeeMgmtSilverlightApplication.ServiceReference1.Entity ent, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ent;
                System.IAsyncResult _result = base.BeginInvoke("Employee", _args, callback, asyncState);
                return _result;
            }
            
            public int EndEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Employee", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSelectAll(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("SelectAll", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<EmployeeMgmtSilverlightApplication.ServiceReference1.Entity> EndSelectAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<EmployeeMgmtSilverlightApplication.ServiceReference1.Entity> _result = ((System.Collections.ObjectModel.ObservableCollection<EmployeeMgmtSilverlightApplication.ServiceReference1.Entity>)(base.EndInvoke("SelectAll", _args, result)));
                return _result;
            }
        }
    }
}
